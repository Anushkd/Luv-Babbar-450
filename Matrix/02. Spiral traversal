vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        int top= 0, bottom= r-1, left= 0, right= c-1;
        vector <int> answer;
        
        if(matrix.size()==0)
        return answer;
        
        while(top<=bottom && left<=right)
        {
            for(int i= left;i<=right;i++)
            {
                answer.push_back(matrix[top][i]);
            }
            top++;
            for(int i= top;i<=bottom;i++)
            {
                answer.push_back(matrix[i][right]);
            }
            right--;
            
            if(top<=bottom)
            {
                for(int i=right;i>=left;i--)
                answer.push_back(matrix[bottom][i]);
                bottom--;
            }
            if(left<=right)
            {
                for(int i= bottom;i>=top;i--)
                answer.push_back(matrix[i][left]);
                left++;
            }
        }
        
        return answer;
    }
